{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dark = void 0;\nexports.default = createPalette;\nexports.light = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _utils = require(\"@mui/utils\");\nvar _system = require(\"@mui/system\");\nvar _common = _interopRequireDefault(require(\"../colors/common\"));\nvar _grey = _interopRequireDefault(require(\"../colors/grey\"));\nvar _purple = _interopRequireDefault(require(\"../colors/purple\"));\nvar _red = _interopRequireDefault(require(\"../colors/red\"));\nvar _orange = _interopRequireDefault(require(\"../colors/orange\"));\nvar _blue = _interopRequireDefault(require(\"../colors/blue\"));\nvar _lightBlue = _interopRequireDefault(require(\"../colors/lightBlue\"));\nvar _green = _interopRequireDefault(require(\"../colors/green\"));\nconst _excluded = [\"mode\", \"contrastThreshold\", \"tonalOffset\"];\nconst light = exports.light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.6)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: _common.default.white,\n    default: _common.default.white\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nconst dark = exports.dark = {\n  text: {\n    primary: _common.default.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: '#121212',\n    default: '#121212'\n  },\n  action: {\n    active: _common.default.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  const tonalOffsetLight = tonalOffset.light || tonalOffset;\n  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = (0, _system.lighten)(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = (0, _system.darken)(intent.main, tonalOffsetDark);\n    }\n  }\n}\nfunction getDefaultPrimary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _blue.default[200],\n      light: _blue.default[50],\n      dark: _blue.default[400]\n    };\n  }\n  return {\n    main: _blue.default[700],\n    light: _blue.default[400],\n    dark: _blue.default[800]\n  };\n}\nfunction getDefaultSecondary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _purple.default[200],\n      light: _purple.default[50],\n      dark: _purple.default[400]\n    };\n  }\n  return {\n    main: _purple.default[500],\n    light: _purple.default[300],\n    dark: _purple.default[700]\n  };\n}\nfunction getDefaultError(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _red.default[500],\n      light: _red.default[300],\n      dark: _red.default[700]\n    };\n  }\n  return {\n    main: _red.default[700],\n    light: _red.default[400],\n    dark: _red.default[800]\n  };\n}\nfunction getDefaultInfo(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _lightBlue.default[400],\n      light: _lightBlue.default[300],\n      dark: _lightBlue.default[700]\n    };\n  }\n  return {\n    main: _lightBlue.default[700],\n    light: _lightBlue.default[500],\n    dark: _lightBlue.default[900]\n  };\n}\nfunction getDefaultSuccess(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _green.default[400],\n      light: _green.default[300],\n      dark: _green.default[700]\n    };\n  }\n  return {\n    main: _green.default[800],\n    light: _green.default[500],\n    dark: _green.default[900]\n  };\n}\nfunction getDefaultWarning(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _orange.default[400],\n      light: _orange.default[300],\n      dark: _orange.default[700]\n    };\n  }\n  return {\n    main: '#ed6c02',\n    // closest to orange[800] that pass 3:1.\n    light: _orange.default[500],\n    dark: _orange.default[900]\n  };\n}\nfunction createPalette(palette) {\n  const {\n      mode = 'light',\n      contrastThreshold = 3,\n      tonalOffset = 0.2\n    } = palette,\n    other = (0, _objectWithoutPropertiesLoose2.default)(palette, _excluded);\n  const primary = palette.primary || getDefaultPrimary(mode);\n  const secondary = palette.secondary || getDefaultSecondary(mode);\n  const error = palette.error || getDefaultError(mode);\n  const info = palette.info || getDefaultInfo(mode);\n  const success = palette.success || getDefaultSuccess(mode);\n  const warning = palette.warning || getDefaultWarning(mode);\n\n  // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n  function getContrastText(background) {\n    const contrastText = (0, _system.getContrastRatio)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n    if (process.env.NODE_ENV !== 'production') {\n      const contrast = (0, _system.getContrastRatio)(background, contrastText);\n      if (contrast < 3) {\n        console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n    return contrastText;\n  }\n  const augmentColor = ({\n    color,\n    name,\n    mainShade = 500,\n    lightShade = 300,\n    darkShade = 700\n  }) => {\n    color = (0, _extends2.default)({}, color);\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n    if (!color.hasOwnProperty('main')) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\nThe color object needs to have a \\`main\\` property or a \\`${mainShade}\\` property.` : (0, _utils.formatMuiErrorMessage)(11, name ? ` (${name})` : '', mainShade));\n    }\n    if (typeof color.main !== 'string') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\n\\`color.main\\` should be a string, but \\`${JSON.stringify(color.main)}\\` was provided instead.\n\nDid you intend to use one of the following approaches?\n\nimport { green } from \"@mui/material/colors\";\n\nconst theme1 = createTheme({ palette: {\n  primary: green,\n} });\n\nconst theme2 = createTheme({ palette: {\n  primary: { main: green[500] },\n} });` : (0, _utils.formatMuiErrorMessage)(12, name ? ` (${name})` : '', JSON.stringify(color.main)));\n    }\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n    return color;\n  };\n  const modes = {\n    dark,\n    light\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    if (!modes[mode]) {\n      console.error(`MUI: The palette mode \\`${mode}\\` is not supported.`);\n    }\n  }\n  const paletteOutput = (0, _utils.deepmerge)((0, _extends2.default)({\n    // A collection of common colors.\n    common: (0, _extends2.default)({}, _common.default),\n    // prevent mutable object.\n    // The palette mode, can be light or dark.\n    mode,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor({\n      color: primary,\n      name: 'primary'\n    }),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor({\n      color: secondary,\n      name: 'secondary',\n      mainShade: 'A400',\n      lightShade: 'A200',\n      darkShade: 'A700'\n    }),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor({\n      color: error,\n      name: 'error'\n    }),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor({\n      color: warning,\n      name: 'warning'\n    }),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor({\n      color: info,\n      name: 'info'\n    }),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor({\n      color: success,\n      name: 'success'\n    }),\n    // The grey colors.\n    grey: _grey.default,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText,\n    // Generate a rich color object.\n    augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset\n  }, modes[mode]), other);\n  return paletteOutput;\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","dark","default","createPalette","light","_extends2","_objectWithoutPropertiesLoose2","_utils","_system","_common","_grey","_purple","_red","_orange","_blue","_lightBlue","_green","_excluded","text","primary","secondary","disabled","divider","background","paper","white","action","active","hover","hoverOpacity","selected","selectedOpacity","disabledBackground","disabledOpacity","focus","focusOpacity","activatedOpacity","icon","addLightOrDark","intent","direction","shade","tonalOffset","tonalOffsetLight","tonalOffsetDark","hasOwnProperty","lighten","main","darken","getDefaultPrimary","mode","getDefaultSecondary","getDefaultError","getDefaultInfo","getDefaultSuccess","getDefaultWarning","palette","contrastThreshold","other","error","info","success","warning","getContrastText","contrastText","getContrastRatio","process","env","NODE_ENV","contrast","console","join","augmentColor","color","name","mainShade","lightShade","darkShade","Error","formatMuiErrorMessage","JSON","stringify","modes","paletteOutput","deepmerge","common","grey"],"sources":["/Users/dennischang/My Drive/Engineering/Projects/Line_Follower/Software/UserInterface/robot-sumo-dashboard/node_modules/@mui/material/node/styles/createPalette.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dark = void 0;\nexports.default = createPalette;\nexports.light = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _utils = require(\"@mui/utils\");\nvar _system = require(\"@mui/system\");\nvar _common = _interopRequireDefault(require(\"../colors/common\"));\nvar _grey = _interopRequireDefault(require(\"../colors/grey\"));\nvar _purple = _interopRequireDefault(require(\"../colors/purple\"));\nvar _red = _interopRequireDefault(require(\"../colors/red\"));\nvar _orange = _interopRequireDefault(require(\"../colors/orange\"));\nvar _blue = _interopRequireDefault(require(\"../colors/blue\"));\nvar _lightBlue = _interopRequireDefault(require(\"../colors/lightBlue\"));\nvar _green = _interopRequireDefault(require(\"../colors/green\"));\nconst _excluded = [\"mode\", \"contrastThreshold\", \"tonalOffset\"];\nconst light = exports.light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.6)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: _common.default.white,\n    default: _common.default.white\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nconst dark = exports.dark = {\n  text: {\n    primary: _common.default.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: '#121212',\n    default: '#121212'\n  },\n  action: {\n    active: _common.default.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  const tonalOffsetLight = tonalOffset.light || tonalOffset;\n  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = (0, _system.lighten)(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = (0, _system.darken)(intent.main, tonalOffsetDark);\n    }\n  }\n}\nfunction getDefaultPrimary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _blue.default[200],\n      light: _blue.default[50],\n      dark: _blue.default[400]\n    };\n  }\n  return {\n    main: _blue.default[700],\n    light: _blue.default[400],\n    dark: _blue.default[800]\n  };\n}\nfunction getDefaultSecondary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _purple.default[200],\n      light: _purple.default[50],\n      dark: _purple.default[400]\n    };\n  }\n  return {\n    main: _purple.default[500],\n    light: _purple.default[300],\n    dark: _purple.default[700]\n  };\n}\nfunction getDefaultError(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _red.default[500],\n      light: _red.default[300],\n      dark: _red.default[700]\n    };\n  }\n  return {\n    main: _red.default[700],\n    light: _red.default[400],\n    dark: _red.default[800]\n  };\n}\nfunction getDefaultInfo(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _lightBlue.default[400],\n      light: _lightBlue.default[300],\n      dark: _lightBlue.default[700]\n    };\n  }\n  return {\n    main: _lightBlue.default[700],\n    light: _lightBlue.default[500],\n    dark: _lightBlue.default[900]\n  };\n}\nfunction getDefaultSuccess(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _green.default[400],\n      light: _green.default[300],\n      dark: _green.default[700]\n    };\n  }\n  return {\n    main: _green.default[800],\n    light: _green.default[500],\n    dark: _green.default[900]\n  };\n}\nfunction getDefaultWarning(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _orange.default[400],\n      light: _orange.default[300],\n      dark: _orange.default[700]\n    };\n  }\n  return {\n    main: '#ed6c02',\n    // closest to orange[800] that pass 3:1.\n    light: _orange.default[500],\n    dark: _orange.default[900]\n  };\n}\nfunction createPalette(palette) {\n  const {\n      mode = 'light',\n      contrastThreshold = 3,\n      tonalOffset = 0.2\n    } = palette,\n    other = (0, _objectWithoutPropertiesLoose2.default)(palette, _excluded);\n  const primary = palette.primary || getDefaultPrimary(mode);\n  const secondary = palette.secondary || getDefaultSecondary(mode);\n  const error = palette.error || getDefaultError(mode);\n  const info = palette.info || getDefaultInfo(mode);\n  const success = palette.success || getDefaultSuccess(mode);\n  const warning = palette.warning || getDefaultWarning(mode);\n\n  // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n  function getContrastText(background) {\n    const contrastText = (0, _system.getContrastRatio)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n    if (process.env.NODE_ENV !== 'production') {\n      const contrast = (0, _system.getContrastRatio)(background, contrastText);\n      if (contrast < 3) {\n        console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n    return contrastText;\n  }\n  const augmentColor = ({\n    color,\n    name,\n    mainShade = 500,\n    lightShade = 300,\n    darkShade = 700\n  }) => {\n    color = (0, _extends2.default)({}, color);\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n    if (!color.hasOwnProperty('main')) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\nThe color object needs to have a \\`main\\` property or a \\`${mainShade}\\` property.` : (0, _utils.formatMuiErrorMessage)(11, name ? ` (${name})` : '', mainShade));\n    }\n    if (typeof color.main !== 'string') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\n\\`color.main\\` should be a string, but \\`${JSON.stringify(color.main)}\\` was provided instead.\n\nDid you intend to use one of the following approaches?\n\nimport { green } from \"@mui/material/colors\";\n\nconst theme1 = createTheme({ palette: {\n  primary: green,\n} });\n\nconst theme2 = createTheme({ palette: {\n  primary: { main: green[500] },\n} });` : (0, _utils.formatMuiErrorMessage)(12, name ? ` (${name})` : '', JSON.stringify(color.main)));\n    }\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n    return color;\n  };\n  const modes = {\n    dark,\n    light\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    if (!modes[mode]) {\n      console.error(`MUI: The palette mode \\`${mode}\\` is not supported.`);\n    }\n  }\n  const paletteOutput = (0, _utils.deepmerge)((0, _extends2.default)({\n    // A collection of common colors.\n    common: (0, _extends2.default)({}, _common.default),\n    // prevent mutable object.\n    // The palette mode, can be light or dark.\n    mode,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor({\n      color: primary,\n      name: 'primary'\n    }),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor({\n      color: secondary,\n      name: 'secondary',\n      mainShade: 'A400',\n      lightShade: 'A200',\n      darkShade: 'A700'\n    }),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor({\n      color: error,\n      name: 'error'\n    }),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor({\n      color: warning,\n      name: 'warning'\n    }),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor({\n      color: info,\n      name: 'info'\n    }),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor({\n      color: success,\n      name: 'success'\n    }),\n    // The grey colors.\n    grey: _grey.default,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText,\n    // Generate a rich color object.\n    augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset\n  }, modes[mode]), other);\n  return paletteOutput;\n}"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AACpFC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,IAAI,GAAG,KAAK,CAAC;AACrBF,OAAO,CAACG,OAAO,GAAGC,aAAa;AAC/BJ,OAAO,CAACK,KAAK,GAAG,KAAK,CAAC;AACtB,IAAIC,SAAS,GAAGV,sBAAsB,CAACC,OAAO,CAAC,gCAAgC,CAAC,CAAC;AACjF,IAAIU,8BAA8B,GAAGX,sBAAsB,CAACC,OAAO,CAAC,qDAAqD,CAAC,CAAC;AAC3H,IAAIW,MAAM,GAAGX,OAAO,CAAC,YAAY,CAAC;AAClC,IAAIY,OAAO,GAAGZ,OAAO,CAAC,aAAa,CAAC;AACpC,IAAIa,OAAO,GAAGd,sBAAsB,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACjE,IAAIc,KAAK,GAAGf,sBAAsB,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC7D,IAAIe,OAAO,GAAGhB,sBAAsB,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACjE,IAAIgB,IAAI,GAAGjB,sBAAsB,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC;AAC3D,IAAIiB,OAAO,GAAGlB,sBAAsB,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACjE,IAAIkB,KAAK,GAAGnB,sBAAsB,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC7D,IAAImB,UAAU,GAAGpB,sBAAsB,CAACC,OAAO,CAAC,qBAAqB,CAAC,CAAC;AACvE,IAAIoB,MAAM,GAAGrB,sBAAsB,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC/D,MAAMqB,SAAS,GAAG,CAAC,MAAM,EAAE,mBAAmB,EAAE,aAAa,CAAC;AAC9D,MAAMb,KAAK,GAAGL,OAAO,CAACK,KAAK,GAAG;EAC5B;EACAc,IAAI,EAAE;IACJ;IACAC,OAAO,EAAE,qBAAqB;IAC9B;IACAC,SAAS,EAAE,oBAAoB;IAC/B;IACAC,QAAQ,EAAE;EACZ,CAAC;EACD;EACAC,OAAO,EAAE,qBAAqB;EAC9B;EACA;EACAC,UAAU,EAAE;IACVC,KAAK,EAAEf,OAAO,CAACP,OAAO,CAACuB,KAAK;IAC5BvB,OAAO,EAAEO,OAAO,CAACP,OAAO,CAACuB;EAC3B,CAAC;EACD;EACAC,MAAM,EAAE;IACN;IACAC,MAAM,EAAE,qBAAqB;IAC7B;IACAC,KAAK,EAAE,qBAAqB;IAC5BC,YAAY,EAAE,IAAI;IAClB;IACAC,QAAQ,EAAE,qBAAqB;IAC/BC,eAAe,EAAE,IAAI;IACrB;IACAV,QAAQ,EAAE,qBAAqB;IAC/B;IACAW,kBAAkB,EAAE,qBAAqB;IACzCC,eAAe,EAAE,IAAI;IACrBC,KAAK,EAAE,qBAAqB;IAC5BC,YAAY,EAAE,IAAI;IAClBC,gBAAgB,EAAE;EACpB;AACF,CAAC;AACD,MAAMnC,IAAI,GAAGF,OAAO,CAACE,IAAI,GAAG;EAC1BiB,IAAI,EAAE;IACJC,OAAO,EAAEV,OAAO,CAACP,OAAO,CAACuB,KAAK;IAC9BL,SAAS,EAAE,0BAA0B;IACrCC,QAAQ,EAAE,0BAA0B;IACpCgB,IAAI,EAAE;EACR,CAAC;EACDf,OAAO,EAAE,2BAA2B;EACpCC,UAAU,EAAE;IACVC,KAAK,EAAE,SAAS;IAChBtB,OAAO,EAAE;EACX,CAAC;EACDwB,MAAM,EAAE;IACNC,MAAM,EAAElB,OAAO,CAACP,OAAO,CAACuB,KAAK;IAC7BG,KAAK,EAAE,2BAA2B;IAClCC,YAAY,EAAE,IAAI;IAClBC,QAAQ,EAAE,2BAA2B;IACrCC,eAAe,EAAE,IAAI;IACrBV,QAAQ,EAAE,0BAA0B;IACpCW,kBAAkB,EAAE,2BAA2B;IAC/CC,eAAe,EAAE,IAAI;IACrBC,KAAK,EAAE,2BAA2B;IAClCC,YAAY,EAAE,IAAI;IAClBC,gBAAgB,EAAE;EACpB;AACF,CAAC;AACD,SAASE,cAAcA,CAACC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,WAAW,EAAE;EAC7D,MAAMC,gBAAgB,GAAGD,WAAW,CAACtC,KAAK,IAAIsC,WAAW;EACzD,MAAME,eAAe,GAAGF,WAAW,CAACzC,IAAI,IAAIyC,WAAW,GAAG,GAAG;EAC7D,IAAI,CAACH,MAAM,CAACC,SAAS,CAAC,EAAE;IACtB,IAAID,MAAM,CAACM,cAAc,CAACJ,KAAK,CAAC,EAAE;MAChCF,MAAM,CAACC,SAAS,CAAC,GAAGD,MAAM,CAACE,KAAK,CAAC;IACnC,CAAC,MAAM,IAAID,SAAS,KAAK,OAAO,EAAE;MAChCD,MAAM,CAACnC,KAAK,GAAG,CAAC,CAAC,EAAEI,OAAO,CAACsC,OAAO,EAAEP,MAAM,CAACQ,IAAI,EAAEJ,gBAAgB,CAAC;IACpE,CAAC,MAAM,IAAIH,SAAS,KAAK,MAAM,EAAE;MAC/BD,MAAM,CAACtC,IAAI,GAAG,CAAC,CAAC,EAAEO,OAAO,CAACwC,MAAM,EAAET,MAAM,CAACQ,IAAI,EAAEH,eAAe,CAAC;IACjE;EACF;AACF;AACA,SAASK,iBAAiBA,CAACC,IAAI,GAAG,OAAO,EAAE;EACzC,IAAIA,IAAI,KAAK,MAAM,EAAE;IACnB,OAAO;MACLH,IAAI,EAAEjC,KAAK,CAACZ,OAAO,CAAC,GAAG,CAAC;MACxBE,KAAK,EAAEU,KAAK,CAACZ,OAAO,CAAC,EAAE,CAAC;MACxBD,IAAI,EAAEa,KAAK,CAACZ,OAAO,CAAC,GAAG;IACzB,CAAC;EACH;EACA,OAAO;IACL6C,IAAI,EAAEjC,KAAK,CAACZ,OAAO,CAAC,GAAG,CAAC;IACxBE,KAAK,EAAEU,KAAK,CAACZ,OAAO,CAAC,GAAG,CAAC;IACzBD,IAAI,EAAEa,KAAK,CAACZ,OAAO,CAAC,GAAG;EACzB,CAAC;AACH;AACA,SAASiD,mBAAmBA,CAACD,IAAI,GAAG,OAAO,EAAE;EAC3C,IAAIA,IAAI,KAAK,MAAM,EAAE;IACnB,OAAO;MACLH,IAAI,EAAEpC,OAAO,CAACT,OAAO,CAAC,GAAG,CAAC;MAC1BE,KAAK,EAAEO,OAAO,CAACT,OAAO,CAAC,EAAE,CAAC;MAC1BD,IAAI,EAAEU,OAAO,CAACT,OAAO,CAAC,GAAG;IAC3B,CAAC;EACH;EACA,OAAO;IACL6C,IAAI,EAAEpC,OAAO,CAACT,OAAO,CAAC,GAAG,CAAC;IAC1BE,KAAK,EAAEO,OAAO,CAACT,OAAO,CAAC,GAAG,CAAC;IAC3BD,IAAI,EAAEU,OAAO,CAACT,OAAO,CAAC,GAAG;EAC3B,CAAC;AACH;AACA,SAASkD,eAAeA,CAACF,IAAI,GAAG,OAAO,EAAE;EACvC,IAAIA,IAAI,KAAK,MAAM,EAAE;IACnB,OAAO;MACLH,IAAI,EAAEnC,IAAI,CAACV,OAAO,CAAC,GAAG,CAAC;MACvBE,KAAK,EAAEQ,IAAI,CAACV,OAAO,CAAC,GAAG,CAAC;MACxBD,IAAI,EAAEW,IAAI,CAACV,OAAO,CAAC,GAAG;IACxB,CAAC;EACH;EACA,OAAO;IACL6C,IAAI,EAAEnC,IAAI,CAACV,OAAO,CAAC,GAAG,CAAC;IACvBE,KAAK,EAAEQ,IAAI,CAACV,OAAO,CAAC,GAAG,CAAC;IACxBD,IAAI,EAAEW,IAAI,CAACV,OAAO,CAAC,GAAG;EACxB,CAAC;AACH;AACA,SAASmD,cAAcA,CAACH,IAAI,GAAG,OAAO,EAAE;EACtC,IAAIA,IAAI,KAAK,MAAM,EAAE;IACnB,OAAO;MACLH,IAAI,EAAEhC,UAAU,CAACb,OAAO,CAAC,GAAG,CAAC;MAC7BE,KAAK,EAAEW,UAAU,CAACb,OAAO,CAAC,GAAG,CAAC;MAC9BD,IAAI,EAAEc,UAAU,CAACb,OAAO,CAAC,GAAG;IAC9B,CAAC;EACH;EACA,OAAO;IACL6C,IAAI,EAAEhC,UAAU,CAACb,OAAO,CAAC,GAAG,CAAC;IAC7BE,KAAK,EAAEW,UAAU,CAACb,OAAO,CAAC,GAAG,CAAC;IAC9BD,IAAI,EAAEc,UAAU,CAACb,OAAO,CAAC,GAAG;EAC9B,CAAC;AACH;AACA,SAASoD,iBAAiBA,CAACJ,IAAI,GAAG,OAAO,EAAE;EACzC,IAAIA,IAAI,KAAK,MAAM,EAAE;IACnB,OAAO;MACLH,IAAI,EAAE/B,MAAM,CAACd,OAAO,CAAC,GAAG,CAAC;MACzBE,KAAK,EAAEY,MAAM,CAACd,OAAO,CAAC,GAAG,CAAC;MAC1BD,IAAI,EAAEe,MAAM,CAACd,OAAO,CAAC,GAAG;IAC1B,CAAC;EACH;EACA,OAAO;IACL6C,IAAI,EAAE/B,MAAM,CAACd,OAAO,CAAC,GAAG,CAAC;IACzBE,KAAK,EAAEY,MAAM,CAACd,OAAO,CAAC,GAAG,CAAC;IAC1BD,IAAI,EAAEe,MAAM,CAACd,OAAO,CAAC,GAAG;EAC1B,CAAC;AACH;AACA,SAASqD,iBAAiBA,CAACL,IAAI,GAAG,OAAO,EAAE;EACzC,IAAIA,IAAI,KAAK,MAAM,EAAE;IACnB,OAAO;MACLH,IAAI,EAAElC,OAAO,CAACX,OAAO,CAAC,GAAG,CAAC;MAC1BE,KAAK,EAAES,OAAO,CAACX,OAAO,CAAC,GAAG,CAAC;MAC3BD,IAAI,EAAEY,OAAO,CAACX,OAAO,CAAC,GAAG;IAC3B,CAAC;EACH;EACA,OAAO;IACL6C,IAAI,EAAE,SAAS;IACf;IACA3C,KAAK,EAAES,OAAO,CAACX,OAAO,CAAC,GAAG,CAAC;IAC3BD,IAAI,EAAEY,OAAO,CAACX,OAAO,CAAC,GAAG;EAC3B,CAAC;AACH;AACA,SAASC,aAAaA,CAACqD,OAAO,EAAE;EAC9B,MAAM;MACFN,IAAI,GAAG,OAAO;MACdO,iBAAiB,GAAG,CAAC;MACrBf,WAAW,GAAG;IAChB,CAAC,GAAGc,OAAO;IACXE,KAAK,GAAG,CAAC,CAAC,EAAEpD,8BAA8B,CAACJ,OAAO,EAAEsD,OAAO,EAAEvC,SAAS,CAAC;EACzE,MAAME,OAAO,GAAGqC,OAAO,CAACrC,OAAO,IAAI8B,iBAAiB,CAACC,IAAI,CAAC;EAC1D,MAAM9B,SAAS,GAAGoC,OAAO,CAACpC,SAAS,IAAI+B,mBAAmB,CAACD,IAAI,CAAC;EAChE,MAAMS,KAAK,GAAGH,OAAO,CAACG,KAAK,IAAIP,eAAe,CAACF,IAAI,CAAC;EACpD,MAAMU,IAAI,GAAGJ,OAAO,CAACI,IAAI,IAAIP,cAAc,CAACH,IAAI,CAAC;EACjD,MAAMW,OAAO,GAAGL,OAAO,CAACK,OAAO,IAAIP,iBAAiB,CAACJ,IAAI,CAAC;EAC1D,MAAMY,OAAO,GAAGN,OAAO,CAACM,OAAO,IAAIP,iBAAiB,CAACL,IAAI,CAAC;;EAE1D;EACA;EACA;EACA,SAASa,eAAeA,CAACxC,UAAU,EAAE;IACnC,MAAMyC,YAAY,GAAG,CAAC,CAAC,EAAExD,OAAO,CAACyD,gBAAgB,EAAE1C,UAAU,EAAEtB,IAAI,CAACiB,IAAI,CAACC,OAAO,CAAC,IAAIsC,iBAAiB,GAAGxD,IAAI,CAACiB,IAAI,CAACC,OAAO,GAAGf,KAAK,CAACc,IAAI,CAACC,OAAO;IAC/I,IAAI+C,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,MAAMC,QAAQ,GAAG,CAAC,CAAC,EAAE7D,OAAO,CAACyD,gBAAgB,EAAE1C,UAAU,EAAEyC,YAAY,CAAC;MACxE,IAAIK,QAAQ,GAAG,CAAC,EAAE;QAChBC,OAAO,CAACX,KAAK,CAAC,CAAE,8BAA6BU,QAAS,UAASL,YAAa,OAAMzC,UAAW,EAAC,EAAE,0EAA0E,EAAE,gFAAgF,CAAC,CAACgD,IAAI,CAAC,IAAI,CAAC,CAAC;MAC3Q;IACF;IACA,OAAOP,YAAY;EACrB;EACA,MAAMQ,YAAY,GAAGA,CAAC;IACpBC,KAAK;IACLC,IAAI;IACJC,SAAS,GAAG,GAAG;IACfC,UAAU,GAAG,GAAG;IAChBC,SAAS,GAAG;EACd,CAAC,KAAK;IACJJ,KAAK,GAAG,CAAC,CAAC,EAAEpE,SAAS,CAACH,OAAO,EAAE,CAAC,CAAC,EAAEuE,KAAK,CAAC;IACzC,IAAI,CAACA,KAAK,CAAC1B,IAAI,IAAI0B,KAAK,CAACE,SAAS,CAAC,EAAE;MACnCF,KAAK,CAAC1B,IAAI,GAAG0B,KAAK,CAACE,SAAS,CAAC;IAC/B;IACA,IAAI,CAACF,KAAK,CAAC5B,cAAc,CAAC,MAAM,CAAC,EAAE;MACjC,MAAM,IAAIiC,KAAK,CAACZ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAI,iBAAgBM,IAAI,GAAI,KAAIA,IAAK,GAAE,GAAG,EAAG;AACxG,4DAA4DC,SAAU,cAAa,GAAG,CAAC,CAAC,EAAEpE,MAAM,CAACwE,qBAAqB,EAAE,EAAE,EAAEL,IAAI,GAAI,KAAIA,IAAK,GAAE,GAAG,EAAE,EAAEC,SAAS,CAAC,CAAC;IAC7J;IACA,IAAI,OAAOF,KAAK,CAAC1B,IAAI,KAAK,QAAQ,EAAE;MAClC,MAAM,IAAI+B,KAAK,CAACZ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAI,iBAAgBM,IAAI,GAAI,KAAIA,IAAK,GAAE,GAAG,EAAG;AACxG,2CAA2CM,IAAI,CAACC,SAAS,CAACR,KAAK,CAAC1B,IAAI,CAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,GAAG,CAAC,CAAC,EAAExC,MAAM,CAACwE,qBAAqB,EAAE,EAAE,EAAEL,IAAI,GAAI,KAAIA,IAAK,GAAE,GAAG,EAAE,EAAEM,IAAI,CAACC,SAAS,CAACR,KAAK,CAAC1B,IAAI,CAAC,CAAC,CAAC;IACjG;IACAT,cAAc,CAACmC,KAAK,EAAE,OAAO,EAAEG,UAAU,EAAElC,WAAW,CAAC;IACvDJ,cAAc,CAACmC,KAAK,EAAE,MAAM,EAAEI,SAAS,EAAEnC,WAAW,CAAC;IACrD,IAAI,CAAC+B,KAAK,CAACT,YAAY,EAAE;MACvBS,KAAK,CAACT,YAAY,GAAGD,eAAe,CAACU,KAAK,CAAC1B,IAAI,CAAC;IAClD;IACA,OAAO0B,KAAK;EACd,CAAC;EACD,MAAMS,KAAK,GAAG;IACZjF,IAAI;IACJG;EACF,CAAC;EACD,IAAI8D,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAI,CAACc,KAAK,CAAChC,IAAI,CAAC,EAAE;MAChBoB,OAAO,CAACX,KAAK,CAAE,2BAA0BT,IAAK,sBAAqB,CAAC;IACtE;EACF;EACA,MAAMiC,aAAa,GAAG,CAAC,CAAC,EAAE5E,MAAM,CAAC6E,SAAS,EAAE,CAAC,CAAC,EAAE/E,SAAS,CAACH,OAAO,EAAE;IACjE;IACAmF,MAAM,EAAE,CAAC,CAAC,EAAEhF,SAAS,CAACH,OAAO,EAAE,CAAC,CAAC,EAAEO,OAAO,CAACP,OAAO,CAAC;IACnD;IACA;IACAgD,IAAI;IACJ;IACA/B,OAAO,EAAEqD,YAAY,CAAC;MACpBC,KAAK,EAAEtD,OAAO;MACduD,IAAI,EAAE;IACR,CAAC,CAAC;IACF;IACAtD,SAAS,EAAEoD,YAAY,CAAC;MACtBC,KAAK,EAAErD,SAAS;MAChBsD,IAAI,EAAE,WAAW;MACjBC,SAAS,EAAE,MAAM;MACjBC,UAAU,EAAE,MAAM;MAClBC,SAAS,EAAE;IACb,CAAC,CAAC;IACF;IACAlB,KAAK,EAAEa,YAAY,CAAC;MAClBC,KAAK,EAAEd,KAAK;MACZe,IAAI,EAAE;IACR,CAAC,CAAC;IACF;IACAZ,OAAO,EAAEU,YAAY,CAAC;MACpBC,KAAK,EAAEX,OAAO;MACdY,IAAI,EAAE;IACR,CAAC,CAAC;IACF;IACAd,IAAI,EAAEY,YAAY,CAAC;MACjBC,KAAK,EAAEb,IAAI;MACXc,IAAI,EAAE;IACR,CAAC,CAAC;IACF;IACAb,OAAO,EAAEW,YAAY,CAAC;MACpBC,KAAK,EAAEZ,OAAO;MACda,IAAI,EAAE;IACR,CAAC,CAAC;IACF;IACAY,IAAI,EAAE5E,KAAK,CAACR,OAAO;IACnB;IACA;IACAuD,iBAAiB;IACjB;IACAM,eAAe;IACf;IACAS,YAAY;IACZ;IACA;IACA;IACA9B;EACF,CAAC,EAAEwC,KAAK,CAAChC,IAAI,CAAC,CAAC,EAAEQ,KAAK,CAAC;EACvB,OAAOyB,aAAa;AACtB"},"metadata":{},"sourceType":"script","externalDependencies":[]}