/// <reference types="w3c-web-serial" />
export declare class BrowserSerial {
    serialOptions: SerialOptions;
    serialFilters: SerialPortRequestOptions;
    port: SerialPort | null;
    EOF: string;
    encoder: TextEncoderStream;
    decoder: TextDecoderStream;
    lineTransformer: TransformStream;
    writeToStream: WritableStream;
    readFromStream: ReadableStream;
    reader: ReadableStreamDefaultReader | null;
    readTransformers: Array<TextDecoderStream | TransformStream>;
    constructor(serialOptions?: SerialOptions, serialFilters?: SerialPortRequestOptions);
    connect(): Promise<void>;
    disconnect(): Promise<void>;
    write(cmd: string): Promise<void>;
    readLoop(callable: (value: string, done: boolean) => boolean): Promise<void>;
    readUntilLine(until: string, reader: ReadableStreamDefaultReader, callable: (value: string, done: boolean) => void): Promise<void>;
    readUntil(until: string, callable: (value: string, done: boolean) => void): Promise<void>;
    readAllChunks(readableStream: ReadableStream): Promise<any>;
    readGenerator(): AsyncGenerator<{
        value: any;
        done: boolean;
    }, void, unknown>;
    getReader(): ReadableStreamDefaultReader | void;
    readLineGenerator(): AsyncGenerator<{
        value: any;
        done: boolean;
    }, void, unknown>;
}
